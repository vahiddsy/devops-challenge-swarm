version: '3.9'

services:
  manager:
    environment:
      - VISUALIZER_TYPE=manager
    image: docker.arvancloud.ir/yandeu/visualizer-rs:dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - agent_network
      - traefik-public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.visualizer-rs_manager.rule=Host(`done-visualizer.antinone.win`)"
        - 'traefik.http.services.visualizer-rs_manager.loadbalancer.server.port=9510'  
        - "traefik.http.routers.visualizer-rs_manager.entrypoints=web"
        - 'traefik.http.routers.visualizer-rs_manager.middlewares=whitlist-visualizer'
        # - "traefik.http.middlewares.test-auth.basicauth.users=test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/" 
        - "traefik.http.middlewares.whitlist-visualizer.ipallowlist.sourceRange=10.0.0.1/24, 127.0.0.1/32, 15.157.41.126"
        # - "traefik.http.middlewares.test-ipwhitelist.ipwhitelist.ipstrategy.depth=2"
        # - "traefik.http.middlewares.test-ipwhitelist.ipwhitelist.ipstrategy.excludedips=127.0.0.1/32, 192.168.1.7"
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    labels:
      - visualizer.manager
    ports:
      - '9510:9510'
    healthcheck:
      test: curl -f http://localhost:9510/healthcheck || exit 1
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s

  agent:
    environment:
      - VISUALIZER_TYPE=agent
    image: docker.arvancloud.ir/yandeu/visualizer-rs:dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
    labels:
      - visualizer.agent
    healthcheck:
      test: curl -f http://localhost:9511/healthcheck || exit 1
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s

networks:
  agent_network:
    driver: overlay
    attachable: true
  traefik-public:
        external: true